SHOW DATABASES;

USE dx0717;

-- DDL

-- 테이블 생성
-- 테이블 이름은 TABLE1
-- 테이블 속성
-- NUM 정수, 일련번호, 기본키
-- NAME은 한글 7자까지 저장하고 글자 수는 변경 안 됨
-- ADDRESS는 한글 100자까지 저장, 글자 변경 자주 됨
-- TEL은 숫자로 된 문자열 11자리, 글자 수 변경 안 됨
-- EMAIL은 영문 100자 이내, 글자 변경 됨
-- BIRTHDAY는 날짜만 저장
-- 조회를 주로, 일련번호는 1부터, 인코딩 UTF8

CREATE TABLE TABLE1(
	NUM INTEGER AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(21),
	ADDRESS TEXT(300),
	TEL VARCHAR(11),
	EMAIL CHAR(100),
	BIRTHDAY DATE
)ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=UTF8;


-- 테이블의 AGE컬럼을 정수 자료형으로 추가
ALTER TABLE TABLE1
ADD AGE INTEGER;

-- 테이블의 AGE컬럼을 삭제
ALTER TABLE TABLE1
DROP AGE;

-- 테이블 컬럼 수정
-- TEL 컬럼명을 PHONE으로 바꾸고 자료형을 정수형으로 변경
ALTER TABLE TABLE1
CHANGE TEL PHONE INTEGER;

-- 테이블 삭제
DROP TABLE TABLE1;

-- DEFAULT 설정
CREATE TABLE NOTNULLTB(
	NAME CHAR(10) NOT NULL,
	AGE INTEGER DEFAULT 0,
);


-- NAME, GENDER(남 또는 여), AGE(0-100)를 속성으로 갖는 테이블 생성
CREATE TABLE INFO(
	NAME CHAR(10) NOT NULL,
	GENDER CHAR(3) CHECK(GENDER IN ('남','여')),
	SCORE INTEGER CHECK(SCORE BETWEEN 0 AND 100)
);	

-- 정상 입력
INSERT INTO INFO(NAME,GENDER,SCORE) VALUES('EUNHA','여','27');
-- GENDER 컬럼 범위 에러
INSERT INTO INFO(NAME,GENDER,SCORE) VALUES('EUNHA','김','27');
-- SCORE 컬럼 범위 에러
INSERT INTO INFO(NAME,GENDER,SCORE) VALUES('EUNHA','여','-27');

-- 기본 키 컬럼제약조건 설정 및 이름 생성
CREATE TABLE PKTABLE1(
	NAME CHAR(10) CONSTRAINT PKTABLE1_PK PRIMARY KEY,
	AGE INT
);	

-- 기본 키 테이블제약조건 설정 및 이름 생성
CREATE TABLE PKTABLE2(
	NAME CHAR(10), 
	AGE INT,
	CONSTRAINT PKTABLE2_PK PRIMARY KEY(NAME)
);

INSERT INTO PKTABLE2(NAME, AGE) VALUES('EUNHA',27)
INSERT INTO PKTABLE2(NAME, AGE) VALUES('EUNHA',27)


-- UNIQUE 테이블 생성
CREATE TABLE UNIQTABLE(
	NAME CHAR(10), 
	AGE INT UNIQUE,
	CONSTRAINT UNIQTABLE PRIMARY KEY(NAME)
);

-- 외래키 지정하지 않는 2개 테이블 생성

-- 직원 테이블
CREATE TABLE EMPLOYEETABLE(
	NAME CHAR(10) PRIMARY KEY,
	SAL INT NOT NULL,
	ADDR VARCHAR(30) NOT NULL
);

INSERT INTO EMPLOYEETABLE(NAME, SAL,ADDR) VALUES('EUNHA',20,'광주');
INSERT INTO EMPLOYEETABLE(NAME, SAL,ADDR) VALUES('CRYSTAL',40,'대전');
INSERT INTO EMPLOYEETABLE(NAME, SAL,ADDR) VALUES('ZEA',60,'서울');


SELECT *
FROM EMPLOYEETABLE;


-- 프로젝트 테이블
-- 컬럼에서 외래키 설정하기 (1)
CREATE TABLE PROJ(
	PROJECTID INT PRIMARY KEY,
	EMPLOYEE CHAR(10) NOT NULL REFERENCES EMPLOYEETABLE(NAME), -- 외래키 참조
	PROJECT VARCHAR(30) NOT NULL,
	COST INT
);
-- 테이블에서 외래키 설정하기 (2)
CREATE TABLE PROJ(
	PROJECTID INT PRIMARY KEY,
	EMPLOYEE CHAR(10) NOT NULL, -- 외래키 참조
	PROJECT VARCHAR(30) NOT NULL,
	COST INT,
	CONSTRAINT FK_EMPLOYEETABLE FOREIGN KEY(EMPLOYEE) REFERENCES EMPLOYEETABLE(NAME)
	ON DELETE CASCADE ON UPDATE CASCADE
);



-- EUNHA는 EMPLOYEETABLE에 있어서 삽입 가능
INSERT INTO PROJ(PROJECTID, EMPLOYEE, PROJECT, COST) VALUES(1,'EUNHA','웹서비스',4000);
-- HANA는 EMPLOYEETABLE에 없어서 삽입 불가
INSERT INTO PROJ(PROJECTID, EMPLOYEE, PROJECT, COST) VALUES(2,'HANA','클라우드',3000);

-- EMPLOYEETABLE 테이블은 PROJ 테이블에서 참조 중이므로 삭제 불가능
DROP TABLE EMPLOYEETABLE;
DROP TABLE PROJ;


-- EUNHA는 PROJ 테이블에서 참조 중이므로 삭제 불가능
DELETE FROM EMPLOYEETABLE WHERE NAME='EUNHA';

-- EMPLOYEETABLE에서 EUNHA이름 변경 시 PROJ 테이블도 같이 변경
UPDATE EMPLOYEETABLE SET NAME='BAEKEUNHA' WHERE NAME='EUNHA';

-- EMPLOYEETABLE에서 BAEKEUNHA 삭제 시 PROJ 테이블에서도 같이 삭제 됨
DELETE FROM EMPLOYEETABLE WHERE NAME='BAEKEUNHA';


SELECT *
FROM PROJ;

-- 일련번호 사용하여 속성 만들기
CREATE TABLE NUMERS(
	NUM INT AUTO_INCREMENT PRIMARY KEY, 
	TITLE CHAR(100),
	CONTENT TEXT
);

INSERT INTO NUMERS(TITLE,CONTENT) VALUES('제목1','내용1'); -- NUM은 1로 자동 생성
INSERT INTO NUMERS(TITLE,CONTENT) VALUES('제목2','내용2'); -- NUM은 2로 자동 생성


INSERT INTO NUMERS(NUM,TITLE,CONTENT) VALUES(10,'제목3','내용3'); -- NUM 직접 생성 가능
INSERT INTO NUMERS(TITLE,CONTENT) VALUES('제목4','내용4'); -- NUM은 11로 자동 생성됨
SELECT * FROM NUMERS;

-- 초기 값 변경 가능 
ALTER TABLE NUMERS AUTO_INCREMENT=1000;
INSERT INTO NUMERS(TITLE,CONTENT) VALUES('제목5','내용5'); -- NUM은 1000으로 자동 생성됨



-- 모든 제약조건 조회
SELECT *
FROM information_schema.table_constraints;


-- DML

DESC tCity 

-- 컬럼명 나열해서 데이터 삽입
INSERT INTO tCity(name, area, popu, metro, region)
VALUES('광주',150,200,'Y','경기');

-- 컬럼명 생략해서 전체 데이터 삽입
INSERT INTO tCity
VALUES('분당',550,300,'Y','경기');


-- popu 컬럼명 생략하고 데이터 삽입 -> popu는 기본 값 없으므로 NULL
INSERT INTO tCity(name, area, metro, region)
VALUES('의정부',450,'Y','경기');

-- 여러 데이터 한번에 삽입
INSERT INTO tCity
VALUES('구리',330, 230,'Y','경기'), ('수원',610, 340,'Y','경기');

-- name이 '수원'인 데이터 삭제
DELETE FROM tCity
WHERE name ='수원';

SELECT * FROM tCity

-- name이 구리인 데이터의 popu를 400으로 수정
UPDATE tCity
SET popu = 400
WHERE name='구리';


SELECT * FROM tCity








